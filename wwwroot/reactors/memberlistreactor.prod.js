const MemberDashboard={props:["param2"],setup(props){const{param1:param1}=Vue.toRefs(props);const title=Vue.ref("Home");const endPoint=Vue.ref("");const isLoading=Vue.ref(true);const getBadgeClass=badge=>{badgeval=badge.trim().toLowerCase();console.log(badgeval);if(badgeval==="contributor"){return"bg-faded-success text-success"}else if(badgeval==="vip"){return"bg-faded-warning text-warning"}else if(badgeval==="founder"){return"bg-faded-info text-danger"}else{return"bg-faded-primary text-primary"}};const fetchBadges=async()=>{try{startProg();endPoint.value=param2.value;const response=await axios.get("/api/members/getmembers/"+endPoint.value);members.value=response.data;console.log("/api/members/getmembers/"+param1.value);console.log(response.data)}catch(error){console.error("Error fetching user badges:",error)}finally{endProg()}};const fetchMemberData=async()=>{try{startProg();const response=await axios.get("/api/member/getinfo/"+endPoint.value);members.value=response.data;console.log("/api/members/getmembers/"+param1.value);console.log(response.data)}catch(error){console.error("Error fetching user badges:",error)}finally{endProg()}};const loadPosts=()=>{console.log("posts loaded")};Vue.onMounted((()=>{isLoading.value=false}));return{param2:param2,title:title,isLoading:isLoading,fetchBadges:fetchBadges}},template:`\n \n <div v-if="isLoading">\n Loading...\n </div>\n <div v-else>\n <div class="navbar card-header w-100">\n <h1 class="fade-in px-4"id="sectionTitle"class="h2">\n {{param2}}\n </h1>\n <div>\n <router-link :to="'/members/'"class="btn btn-sm btn-secondary ripple my-1 mx-1"><i class="ai-user ms-n1 me-2"></i>Back</router-link>\n \n \n \n </div>\n </div>\n <div class="fade-in row mt-2">\n \n \n </div>\n </div>\n \n `};const MembersComp={props:["param1"],setup(props){const{param1:param1}=Vue.toRefs(props);const title=Vue.ref("Home");const members=Vue.ref([]);const endPoint=Vue.ref("");const isLoading=Vue.ref(true);const getBadgeClass=badge=>{badgeval=badge.trim().toLowerCase();console.log(badgeval);if(badgeval==="contributor"){return"bg-faded-success text-success"}else if(badgeval==="vip"){return"bg-faded-warning text-warning"}else if(badgeval==="founder"){return"bg-faded-info text-danger"}else{return"bg-faded-primary text-primary"}};const fetchMembers=async()=>{try{startProg();endPoint.value=param1.value===""?"all":param1.value;const response=await axios.get("/api/members/getmembers/"+endPoint.value);members.value=response.data;console.log("/api/members/getmembers/"+param1.value);console.log(response.data)}catch(error){console.error("Error fetching user badges:",error)}finally{endProg()}};const loadPosts=()=>{console.log("posts loaded")};Vue.onMounted((()=>{title.value=param1.value===""?"all":param1.value;fetchMembers();isLoading.value=false}));Vue.watch(param1,((newVal,oldVal)=>{title.value=newVal===undefined||newVal===""?"all":newVal;fetchMembers()}));return{param1:param1,title:title,isLoading:isLoading,members:members,fetchMembers:fetchMembers,getBadgeClass:getBadgeClass}},template:`\n \n <div v-if="isLoading">\n Loading...\n </div>\n <div v-else>\n <div class="navbar card-header w-100">\n <h1 class="fade-in px-4"id="sectionTitle"class="h2">\n {{title ==='all' ? title: title + 's'}}\n </h1>\n <div>\n <router-link :to="'/members/'"class="btn btn-sm btn-secondary ripple my-1 mx-1"><img src="/assets/svg/badges/badges.svg"width="20">&nbsp;Badged Members</router-link>\n <router-link :to="'/members/pioneer'"class="btn btn-sm btn-secondary ripple my-1 mx-1"><img src="/assets/svg/badges/pioneer.svg"width="20">&nbsp;Pioneers</router-link>\n <router-link :to="'/members/contributor'"class="btn btn-sm btn-secondary my-1 ripple mx-1"><img src="/assets/svg/badges/contributor.svg"width="20">&nbsp;Contributors</router-link>\n <router-link :to="'/members/founder'"class="btn btn-sm btn-secondary ripple my-1 mx-1"><img src="/assets/svg/badges/founder.svg"width="20">&nbsp;Founders</router-link>\n <router-link :to="'/members/vip'"class="btn btn-sm btn-secondary ripple my-1 mx-1"><img src="/assets/svg/badges/vip.svg"width="20">&nbsp;VIP</router-link>\n </div>\n </div>\n <div class="fade-in row mt-2">\n <div v-for="member in members":key="member.userName"class="col-md-6 pb-2 pt-2">\n <div class="card h-100 rounded-3 p-3 p-sm-4">\n <div class="d-flex align-items-center pb-2 mb-1">\n <h3 class="h6 text-nowrap text-truncate mb-0"><router-link :to="'/member/' + member.userName">@{{member.userName}}</router-link></h3>\n <span class="badge fs-xs ms-1":class="getBadgeClass(badge)"v-for="badge in member.badges.split(',')":key="badge">{{badge}}</span>\n <div class="d-flex ms-auto">\n <div class="mx-1"v-for="badge in member.badges.split(',')":key="badge">\n <img :src="'/assets/svg/badges/'+ badge.trim().toLowerCase() +'.svg'"width="22">\n </div>\n </div>\n </div>\n <div class="d-flex align-items-center"><img width="50"style="border-radius:30px":src="'/assets/images/avatars/default/' + member.avatarImg + '.png'">\n <div class="ps-3 fs-sm">\n <div class="text-dark">{{member.firstName}}{{member.lastName}}</div>\n <div class="text-muted">#{{member.id}}</div>\n </div>\n </div>\n </div>\n </div>\n </div>\n </div>\n \n `};const routes=[{path:"/members/:param1?",component:MembersComp,props:true,watchQuery:["param1"]},{path:"/member/:param2?",component:MemberDashboard,props:true,watchQuery:["param2"]}];const router=VueRouter.createRouter({history:VueRouter.createWebHistory(),routes:routes});const app=Vue.createApp({});app.use(router);app.mount("#appMembers");